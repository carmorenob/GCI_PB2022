$PBExportHeader$f_motivo.srf
global type f_motivo from function_object
end type

forward prototypes
global function multilineedit f_motivo (double p_contador, ref string p_lugar, string p_tingre, readonly richtextedit p_rte, multilineedit p_mle)
end prototypes

global function multilineedit f_motivo (double p_contador, ref string p_lugar, string p_tingre, readonly richtextedit p_rte, multilineedit p_mle);long ll_reg,ll_contador
blob lb_motivo

select 
	min(nregistro) into :ll_reg 
from 
	(hclin_registro inner join hclin_plant on hclin_registro.codplantilla = hclin_plant.codplantilla) 
	inner join hclin_plantcampo on hclin_plant.codplantilla = hclin_plantcampo.codplantilla
where 
	(((hclin_registro.contador)=:p_contador) and ((hclin_registro.clugar)=:p_lugar) and ((hclin_plantcampo.motivo)='1'));
IF SQLCA.SQLCode = -1 THEN
	MessageBox("No pudo recuperarse información de la planilla para conocer el motivo del ingreso (hclin_registro).", SQLCA.SQLErrText)
	p_mle.text='no'
	return p_mle
END IF

selectblob
	hclin_reg_valor.long_texto into :lb_motivo
from 
	((hclin_plant inner join hclin_plantcampo on hclin_plant.codplantilla = hclin_plantcampo.codplantilla) 
	inner join hclin_reg_valor on hclin_plantcampo.numcampo = hclin_reg_valor.item) 
	inner join hclin_registro on (hclin_reg_valor.clugar = hclin_registro.clugar) and (hclin_reg_valor.contador = hclin_registro.contador) 
	and (hclin_plant.codplantilla = hclin_registro.codplantilla)
where 
	(((hclin_plantcampo.motivo)='1') and ((hclin_plant.codtingre)= :p_tingre) and ((hclin_plant.ingreso)='I') 
	and ((hclin_reg_valor.contador)=:p_contador) and ((hclin_registro.clugar)=:p_lugar) and ((hclin_registro.nregistro)=:ll_reg));
IF SQLCA.SQLCode = -1 THEN
	MessageBox("No pudo recuperarse información de la planilla para conocer el motivo del ingreso (hclin_reg_valor).", SQLCA.SQLErrText)
	p_mle.text='no'
	return p_mle
END IF
f_pega_a_rtf(p_rte,string(lb_motivo),3)
p_rte.selectTextAll(Detail!)
p_rte.Copy()
p_mle.paste()
return p_mle

end function

